name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROTOC_VERSION: 3.21.12
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Cache for protoc
      id: cache-protoc
      uses: actions/cache@v4
      with:
        path: ~/.cache/protoc
        key: ${{ runner.os }}-protoc-${{ env.PROTOC_VERSION }}
        restore-keys: |
          ${{ runner.os }}-protoc-

    - name: Install protoc if not cached
      if: steps.cache-protoc.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.cache/protoc
        wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
        unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d ~/.cache/protoc
        rm protoc-${PROTOC_VERSION}-linux-x86_64.zip
        chmod +x ~/.cache/protoc/bin/protoc

    - name: Add protoc to PATH
      run: echo "$HOME/.cache/protoc/bin" >> $GITHUB_PATH
        
    - name: Install protoc if not cached
      if: steps.cache-protoc.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.cache/protoc
        wget https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip
        unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d ~/.cache/protoc
        rm protoc-${PROTOC_VERSION}-linux-x86_64.zip
        chmod +x ~/.cache/protoc/bin/protoc

    - name: Add protoc to PATH
      run: echo "$HOME/.cache/protoc/bin" >> $GITHUB_PATH

    - name: Run fmt
      run: cargo fmt --check
    - name: Run Clippy
      run: cargo clippy
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    
